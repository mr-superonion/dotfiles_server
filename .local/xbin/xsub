#!/usr/bin/env bash

function print_help() {
    echo "Usage: $0 [NODES] [TASKS_PER_NODE] [COMMAND]"
    echo ""
    echo "Submit a job to a PBS or Slurm queue."
    echo ""
    echo "Positional arguments:"
    echo "  NODES            Number of nodes required"
    echo "  TASKS_PER_NODE   Number of tasks (or cores) per node"
    echo "  COMMAND          The command to run"
    echo ""
    echo "Optional arguments:"
    echo "  -h, --help       Show this help message and exit"
}

# Check if user requested help
if [[ "$1" == "-h" || "$1" == "--help" ]]; then
    print_help
    exit 0
fi

# Ensure user has provided necessary arguments
if [[ $# -lt 3 ]]; then
    echo "Error: Insufficient arguments provided."
    echo ""
    print_help
    exit 1
fi

NODES=$1
TASKS_PER_NODE=$2
COMMAND="${@:3}"  # Takes all arguments starting from the third

datetime="`date +%d%H%M%S`"
JobName="xsub-"$datetime

# Detect the job scheduler being used
if which qsub &> /dev/null; then
    scheduler="pbs"
elif which sbatch &> /dev/null; then
    scheduler="slurm"
else
    echo "Neither PBS/Torque nor Slurm detected!"
    exit 1
fi

function determine_queue() {
    local nodes=$1
    local procs=$2
    if [[ $nodes -eq 1 ]]; then
        if [[ $procs -eq 1 ]]; then
            echo "tiny"
        else
            echo "mini"
        fi
    elif [[ $nodes -gt 1 && $nodes -lt 5 ]]; then
        echo "small"
    else
        echo "large"
    fi
}

if [[ $scheduler == "slurm" ]]; then
    foo="#!/usr/bin/env bash
#SBATCH --nodes=$NODES
#SBATCH --ntasks-per-node=$TASKS_PER_NODE
#SBATCH --time=48:00:00
#SBATCH --job-name=$JobName
#SBATCH --output=xsub-out-$datetime
#SBATCH --error=xsub-err-$datetime

$(export)
$(export -f)
cd $PWD
$COMMAND
"
    #SBATCH --mem=80G
    cd $PWD && echo "$foo" | sbatch
elif [[ $scheduler == "pbs" ]]; then
QUEUE=$(determine_queue $NODES $TASKS_PER_NODE)
    foo="#!/usr/bin/env bash
#PBS -l nodes=$NODES:ppn=$TASKS_PER_NODE
#PBS -l walltime=48:00:00
#PBS -N $JobName
#PBS -o xsub-out-$datetime
#PBS -e xsub-err-$datetime
#PBS -q $QUEUE

$(export)
$(export -f)
cd $PWD
$COMMAND
"
    #PBS -l mem=80GB
    cd $PWD && echo "$foo" | qsub
fi
