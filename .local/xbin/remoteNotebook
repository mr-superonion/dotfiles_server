#!/usr/bin/env bash

# Prompt the user for server details
read -p "Enter server (user@server_name): " s
read -p "Enter port (default is 9555): " p

# Set default port if none is provided
if [[ -z "$p" ]]; then
    p="9555"
fi

# Validate server details
if [[ -z "$s" ]]; then
    echo "Please provide the server details."
    exit 1
fi

# Terminate existing identical connections
pids=$(lsof -i :"$p" | awk '/IPv4/ && /LISTEN/ {print $2}')
if [[ -n "$pids" ]]; then
    kill $pids || {
        echo "Failed to terminate existing connections on port $p."
        exit 1
    }
fi

# Fetch client and port information from the remote server
read client port3 <<< $(ssh "$s" "awk '{print \$1, \$2}' \$HOME/.cache/jupyterlab.info")
if [[ -z "$client" || -z "$port3" ]]; then
    echo "Failed to retrieve client or port information from remote server."
    exit 1
fi

# Establish an SSH tunnel
cmd="ssh -f -N -L $p:$client:$port3 $s"
echo "$cmd"
eval "$cmd" || {
    echo "Failed to establish an SSH tunnel."
    exit 1
}

# Print and open the Jupyter URL
url="http://localhost:$p"
echo "URL that will open in your browser:"
echo "$url"

# Launch in firefox (or replace with your browser of choice)
firefox "$url" || {
    echo "Failed to launch Firefox. Please open the URL manually."
    exit 1
}
